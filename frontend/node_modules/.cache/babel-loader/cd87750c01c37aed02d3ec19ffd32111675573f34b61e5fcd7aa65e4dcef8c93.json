{"ast":null,"code":"// Callback.js\nimport React,{useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const Callback=()=>{const navigate=useNavigate();useEffect(()=>{const urlParams=new URLSearchParams(window.location.search);const code=urlParams.get('code');if(code){// Exchange the authorization code for an access token\nfetch('https://auth.riotgames.com/token',{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:new URLSearchParams({grant_type:'authorization_code',code:code,redirect_uri:'https://jsakmad.github.io/Valorant-Analyzer',client_id:process.env.REACT_APP_CLIENT_ID,client_secret:process.env.REACT_APP_CLIENT_SECRET// Ensure you have this in your .env file\n})}).then(response=>response.json()).then(data=>{if(data.access_token){localStorage.setItem('riot_token',data.access_token);navigate('/');}}).catch(error=>{console.error('Error fetching the token:',error);});}},[navigate]);return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});};export default Callback;","map":{"version":3,"names":["React","useEffect","useNavigate","jsx","_jsx","Callback","navigate","urlParams","URLSearchParams","window","location","search","code","get","fetch","method","headers","body","grant_type","redirect_uri","client_id","process","env","REACT_APP_CLIENT_ID","client_secret","REACT_APP_CLIENT_SECRET","then","response","json","data","access_token","localStorage","setItem","catch","error","console","children"],"sources":["C:/Users/joshu/.virtualenvs/Valorant Analysis Website/val-analysis-website/src/components/Callback.js"],"sourcesContent":["// Callback.js\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Callback = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const code = urlParams.get('code');\r\n\r\n    if (code) {\r\n      // Exchange the authorization code for an access token\r\n      fetch('https://auth.riotgames.com/token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code: code,\r\n          redirect_uri: 'https://jsakmad.github.io/Valorant-Analyzer',\r\n          client_id: process.env.REACT_APP_CLIENT_ID,\r\n          client_secret: process.env.REACT_APP_CLIENT_SECRET // Ensure you have this in your .env file\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.access_token) {\r\n          localStorage.setItem('riot_token', data.access_token);\r\n          navigate('/');\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching the token:', error);\r\n      });\r\n    }\r\n  }, [navigate]);\r\n\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default Callback;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAAAC,QAAQ,CAAGJ,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAM,SAAS,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAC7D,KAAM,CAAAC,IAAI,CAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC,CAElC,GAAID,IAAI,CAAE,CACR;AACAE,KAAK,CAAC,kCAAkC,CAAE,CACxCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,mCAClB,CAAC,CACDC,IAAI,CAAE,GAAI,CAAAT,eAAe,CAAC,CACxBU,UAAU,CAAE,oBAAoB,CAChCN,IAAI,CAAEA,IAAI,CACVO,YAAY,CAAE,6CAA6C,CAC3DC,SAAS,CAAEC,OAAO,CAACC,GAAG,CAACC,mBAAmB,CAC1CC,aAAa,CAAEH,OAAO,CAACC,GAAG,CAACG,uBAAwB;AACrD,CAAC,CACH,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAI,CACZ,GAAIA,IAAI,CAACC,YAAY,CAAE,CACrBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEH,IAAI,CAACC,YAAY,CAAC,CACrDxB,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAC,CAAC,CACD2B,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAAC5B,QAAQ,CAAC,CAAC,CAEd,mBAAOF,IAAA,QAAAgC,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAAC,CAED,cAAe,CAAA/B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// Test.js\n// Test component that fetches game content from the Riot API and displays it on the page.\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Test=()=>{const[content,setContent]=useState(null);useEffect(()=>{const fetchContent=async()=>{try{const response=await fetch(`https://na.api.riotgames.com/val/content/v1/contents?api_key=${process.env.REACT_APP_RIOT_API_KEY}`);const data=await response.json();setContent(data);}catch(error){console.error('Failed to fetch:',error);}};fetchContent();},[]);if(!content)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Game Content\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[content.characters.map((character,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Character: \",character.name||'Unknown Character']})},index)),content.maps.map((map,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Map: \",map.name||'Unknown Map']})},index))]})]});};export default Test;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Test","content","setContent","fetchContent","response","fetch","process","env","REACT_APP_RIOT_API_KEY","data","json","error","console","children","characters","map","character","index","name","maps"],"sources":["C:/Users/joshu/.virtualenvs/Valorant Analysis Website/val-analysis-website/src/components/Test.js"],"sourcesContent":["// Test.js\r\n// Test component that fetches game content from the Riot API and displays it on the page.\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Test = () => {\r\n  const [content, setContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchContent = async () => {\r\n      try {\r\n        const response = await fetch(`https://na.api.riotgames.com/val/content/v1/contents?api_key=${process.env.REACT_APP_RIOT_API_KEY}`);\r\n        const data = await response.json();\r\n        setContent(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch:', error);\r\n      }\r\n    };\r\n\r\n    fetchContent();\r\n  }, []);\r\n\r\n  if (!content) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Game Content</h2>\r\n      <ul>\r\n        {content.characters.map((character, index) => (\r\n          <li key={index}>\r\n            <p>Character: {character.name || 'Unknown Character'}</p>\r\n          </li>\r\n        ))}\r\n        {content.maps.map((map, index) => (\r\n          <li key={index}>\r\n            <p>Map: {map.name || 'Unknown Map'}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":"AAAA;AACA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gEAAgEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAE,CAAC,CAClI,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAClCR,UAAU,CAACO,IAAI,CAAC,CAClB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CAC1C,CACF,CAAC,CAEDR,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACF,OAAO,CAAE,mBAAOJ,IAAA,QAAAgB,QAAA,CAAK,YAAU,CAAK,CAAC,CAE1C,mBACEd,KAAA,QAAAc,QAAA,eACEhB,IAAA,OAAAgB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBd,KAAA,OAAAc,QAAA,EACGZ,OAAO,CAACa,UAAU,CAACC,GAAG,CAAC,CAACC,SAAS,CAAEC,KAAK,gBACvCpB,IAAA,OAAAgB,QAAA,cACEd,KAAA,MAAAc,QAAA,EAAG,aAAW,CAACG,SAAS,CAACE,IAAI,EAAI,mBAAmB,EAAI,CAAC,EADlDD,KAEL,CACL,CAAC,CACDhB,OAAO,CAACkB,IAAI,CAACJ,GAAG,CAAC,CAACA,GAAG,CAAEE,KAAK,gBAC3BpB,IAAA,OAAAgB,QAAA,cACEd,KAAA,MAAAc,QAAA,EAAG,OAAK,CAACE,GAAG,CAACG,IAAI,EAAI,aAAa,EAAI,CAAC,EADhCD,KAEL,CACL,CAAC,EACA,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\.virtualenvs\\\\Valorant Analysis Website\\\\val-analysis-website\\\\src\\\\components\\\\MatchHistory.js\",\n  _s = $RefreshSig$();\n// MatchHistory.js\n// Component that displays a list of matches played by a player.\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Create function to call Riot API to retrieve match information for a player\n// Display match history in a clear and concise manner with relvant information pertaining to the each match.  Wins, Losses, KDA, etc.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchHistory = () => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [matches, setMatches] = useState([]);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      const response = await fetch(`https://api.example.com/match-history/${username}`);\n      const data = await response.json();\n      setMatches(data);\n    };\n    fetchMatches();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Match History for \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: matches.map(match => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: match.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: match.kda\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: match.map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: match.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, match.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(MatchHistory, \"qw0KbDtpGLd1L55ANlTJ5OXRpYE=\", false, function () {\n  return [useParams];\n});\n_c = MatchHistory;\nexport default MatchHistory;\nvar _c;\n$RefreshReg$(_c, \"MatchHistory\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","MatchHistory","_s","username","matches","setMatches","fetchMatches","response","fetch","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","match","result","kda","date","id","_c","$RefreshReg$"],"sources":["C:/Users/joshu/.virtualenvs/Valorant Analysis Website/val-analysis-website/src/components/MatchHistory.js"],"sourcesContent":["// MatchHistory.js\r\n// Component that displays a list of matches played by a player.\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n// Create function to call Riot API to retrieve match information for a player\r\n// Display match history in a clear and concise manner with relvant information pertaining to the each match.  Wins, Losses, KDA, etc.\r\n\r\nconst MatchHistory = () => {\r\n    const { username } = useParams();\r\n    const [matches, setMatches] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchMatches = async () => {\r\n        const response = await fetch(`https://api.example.com/match-history/${username}`);\r\n        const data = await response.json();\r\n    \r\n        setMatches(data);\r\n        };\r\n    \r\n        fetchMatches();\r\n    }, [username]);\r\n    \r\n    return (\r\n        <div>\r\n        <h2>Match History for {username}</h2>\r\n        <ul>\r\n            {matches.map((match) => (\r\n            <li key={match.id}>\r\n                <p>{match.result}</p>\r\n                <p>{match.kda}</p>\r\n                <p>{match.map}</p>\r\n                <p>{match.date}</p>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default MatchHistory;"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;;AAE5C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCL,QAAQ,EAAE,CAAC;MACjF,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElCL,UAAU,CAACI,IAAI,CAAC;IAChB,CAAC;IAEDH,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAAW,QAAA,gBACAX,OAAA;MAAAW,QAAA,GAAI,oBAAkB,EAACR,QAAQ;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCf,OAAA;MAAAW,QAAA,EACKP,OAAO,CAACY,GAAG,CAAEC,KAAK,iBACnBjB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAAIM,KAAK,CAACC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAIM,KAAK,CAACE;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBf,OAAA;UAAAW,QAAA,EAAIM,KAAK,CAACD;QAAG;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBf,OAAA;UAAAW,QAAA,EAAIM,KAAK,CAACG;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJdE,KAAK,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAACb,EAAA,CA9BAD,YAAY;EAAA,QACOH,SAAS;AAAA;AAAAwB,EAAA,GAD5BrB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\.virtualenvs\\\\Valorant Analysis Website\\\\val-analysis-website\\\\src\\\\components\\\\CompareStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompareStats = ({\n  playerIds\n}) => {\n  _s();\n  const [stats, setStats] = useState([]);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const responses = await Promise.all(playerIds.map(id => fetch(`https://api.riotgames.com/val/stats/v1/players/${id}`, {\n          headers: {\n            'X-Riot-Token': process.env.REACT_APP_RIOT_API_KEY\n          }\n        }).then(res => res.json())));\n        setStats(responses);\n      } catch (error) {\n        console.error('Failed to fetch:', error);\n      }\n    };\n    fetchStats();\n  }, [playerIds]);\n  if (stats.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 34\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Compare Stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), stats.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: stat.playerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rank: \", stat.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"KDA: \", stat.kda]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ADR: \", stat.adr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CompareStats, \"0S3Drn52W0byrmqqk5yWjZ/TY+E=\");\n_c = CompareStats;\nexport default CompareStats;\nvar _c;\n$RefreshReg$(_c, \"CompareStats\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CompareStats","playerIds","_s","stats","setStats","fetchStats","responses","Promise","all","map","id","fetch","headers","process","env","REACT_APP_RIOT_API_KEY","then","res","json","error","console","length","children","fileName","_jsxFileName","lineNumber","columnNumber","stat","index","playerName","rank","kda","adr","_c","$RefreshReg$"],"sources":["C:/Users/joshu/.virtualenvs/Valorant Analysis Website/val-analysis-website/src/components/CompareStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CompareStats = ({ playerIds }) => {\r\n  const [stats, setStats] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        const responses = await Promise.all(playerIds.map(id =>\r\n          fetch(`https://api.riotgames.com/val/stats/v1/players/${id}`, {\r\n            headers: {\r\n              'X-Riot-Token': process.env.REACT_APP_RIOT_API_KEY\r\n            }\r\n          }).then(res => res.json())\r\n        ));\r\n        setStats(responses);\r\n      } catch (error) {\r\n        console.error('Failed to fetch:', error);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, [playerIds]);\r\n\r\n  if (stats.length === 0) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Compare Stats</h2>\r\n      {stats.map((stat, index) => (\r\n        <div key={index}>\r\n          <h3>{stat.playerName}</h3>\r\n          <p>Rank: {stat.rank}</p>\r\n          <p>KDA: {stat.kda}</p>\r\n          <p>ADR: {stat.adr}</p>\r\n          {/* Add more stats as needed */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompareStats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,SAAS,CAACQ,GAAG,CAACC,EAAE,IAClDC,KAAK,CAAC,kDAAkDD,EAAE,EAAE,EAAE;UAC5DE,OAAO,EAAE;YACP,cAAc,EAAEC,OAAO,CAACC,GAAG,CAACC;UAC9B;QACF,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAC3B,CAAC,CAAC;QACFd,QAAQ,CAACE,SAAS,CAAC;MACrB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDd,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;EAEf,IAAIE,KAAK,CAACkB,MAAM,KAAK,CAAC,EAAE,oBAAOtB,OAAA;IAAAuB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEpD,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBvB,KAAK,CAACM,GAAG,CAAC,CAACkB,IAAI,EAAEC,KAAK,kBACrB7B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAKK,IAAI,CAACE;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1B3B,OAAA;QAAAuB,QAAA,GAAG,QAAM,EAACK,IAAI,CAACG,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB3B,OAAA;QAAAuB,QAAA,GAAG,OAAK,EAACK,IAAI,CAACI,GAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtB3B,OAAA;QAAAuB,QAAA,GAAG,OAAK,EAACK,IAAI,CAACK,GAAG;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJdE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtCIF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
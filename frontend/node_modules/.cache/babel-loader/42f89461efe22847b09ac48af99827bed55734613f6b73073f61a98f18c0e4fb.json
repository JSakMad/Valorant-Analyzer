{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshu\\\\.virtualenvs\\\\Valorant Analysis Website\\\\val-analysis-website\\\\src\\\\components\\\\Content.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = () => {\n  _s();\n  const [content, setContent] = useState(null);\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        const response = await fetch(`https://na.api.riotgames.com/val/content/v1/contents?api_key=${process.env.REACT_APP_RIOT_API_KEY}`);\n        console.log('Response:', response); // Log the response\n        const data = await response.json();\n        console.log('API Response:', data); // Log the response\n        setContent(data);\n      } catch (error) {\n        console.error('Failed to fetch:', error);\n      }\n    };\n    fetchContent();\n  }, []);\n  if (!content) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [content.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Character: \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)), content.maps.map((map, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Map: \", map.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Content, \"KAjm4yvD8rjPsAfNiedPNdoqWs4=\");\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Content","_s","content","setContent","fetchContent","response","fetch","process","env","REACT_APP_RIOT_API_KEY","console","log","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","characters","map","character","index","name","maps","_c","$RefreshReg$"],"sources":["C:/Users/joshu/.virtualenvs/Valorant Analysis Website/val-analysis-website/src/components/Content.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Content = () => {\r\n  const [content, setContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchContent = async () => {\r\n      try {\r\n        const response = await fetch(`https://na.api.riotgames.com/val/content/v1/contents?api_key=${process.env.REACT_APP_RIOT_API_KEY}`);\r\n        console.log('Response:', response); // Log the response\r\n        const data = await response.json();\r\n        console.log('API Response:', data); // Log the response\r\n        setContent(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch:', error);\r\n      }\r\n    };\r\n\r\n    fetchContent();\r\n  }, []);\r\n\r\n  if (!content) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Game Content</h2>\r\n      <ul>\r\n        {content.characters.map((character, index) => (\r\n          <li key={index}>\r\n            <p>Character: {character.name}</p>\r\n          </li>\r\n        ))}\r\n        {content.maps.map((map, index) => (\r\n          <li key={index}>\r\n            <p>Map: {map.name}</p>\r\n          </li>\r\n        ))}\r\n        {/* Add more content as needed */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAE,CAAC;QAClIC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEN,QAAQ,CAAC,CAAC,CAAC;QACpC,MAAMO,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,IAAI,CAAC,CAAC,CAAC;QACpCT,UAAU,CAACS,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAEDV,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,OAAO,EAAE,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE1C,oBACEpB,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAAgB,QAAA,GACGb,OAAO,CAACkB,UAAU,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACvCxB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAAgB,QAAA,GAAG,aAAW,EAACO,SAAS,CAACE,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GAD3BI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC,EACDjB,OAAO,CAACuB,IAAI,CAACJ,GAAG,CAAC,CAACA,GAAG,EAAEE,KAAK,kBAC3BxB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAAgB,QAAA,GAAG,OAAK,EAACM,GAAG,CAACG,IAAI;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADfI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}